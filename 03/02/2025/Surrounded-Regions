void traverse(char **board, int rowSize, int colSize, int y, int x)
{

  if (x < 0 || y < 0 || y >= rowSize || x >= colSize || board[y][x] == 'X' || board[y][x] == 'T')
  {
    return;
  }
  if (board[y][x] == 'O')
  {
    board[y][x] = 'T';
  }

  traverse(board, rowSize, colSize, y, x - 1);
  traverse(board, rowSize, colSize, y - 1, x);
  traverse(board, rowSize, colSize, y, x + 1);
  traverse(board, rowSize, colSize, y + 1, x);
  return;
}

void solve(char **board, int boardSize, int *boardColSize)
{
  int rowSize = boardSize, colSize = (*boardColSize);
  for (int i = 0; i < rowSize; i++)
  {
    traverse(board, rowSize, colSize, i, 0);
    traverse(board, rowSize, colSize, i, colSize - 1);
  }
  for (int i = 1; i < colSize - 1; i++)
  {
    traverse(board, rowSize, colSize, 0, i);
    traverse(board, rowSize, colSize, rowSize - 1, i);
  }

  for (int i = 0; i < rowSize; i++)
  {
    for (int j = 0; j < colSize; j++)
    {
      if (board[i][j] == 'T')
      {
        board[i][j] = 'O';
      }
      else if (board[i][j] == 'O')
      {
        board[i][j] = 'X';
      }
    }
  }
}
